#!/bin/bash

## keep these script comments intact

## preparation...

## 1) task: get VPN settings file mullvadconfig_se.zip into place:
##
## sudo cp /etc/openvpn/mullvadconfig_se.zip /etc/openvpn/mullvadconfig_se.zip

set -x
set -e

if [ ! "$(id -u)" == "0" ]; then
   true "ERROR: Must run as root! sudo $0"
   exit 1
fi

if [ ! -f /etc/openvpn/mullvadconfig_se.zip ]; then
   true "ERROR: file /etc/openvpn/mullvadconfig_se.zip missing!"
   exit 2
fi

## Prevent Qubes update check from interfering with apt-get.
## (Since it would lock apt-get and the use of apt-get would fail.)
systemctl stop qubes-update-check.timer >/dev/null 2>&1 || true
systemctl stop qubes-update-check >/dev/null 2>&1 || true

pushd /etc/openvpn

unzip -o mullvadconfig_se.zip

## Make the script idempotent.
rm -r -f OSX

## mullvad uses non-predictable sub folder names depending on account number.
## -iwholename '*OSX*' to make the script idempotent.
folder_name="$(find -maxdepth 1 -type d -not -path '*.' -not -iwholename '*OSX*')"

## move sub folder (named as per account number) contents to /etc/openvpn folder.
mv "$folder_name/"* ./

cp mullvad_linux.conf openvpn.conf

one='se.mullvad.net'
two='193.138.219.226'
sed -i "s#$one#$two#g" openvpn.conf

if ! grep "\#up /etc/openvpn/update-resolv-conf" openvpn.conf ; then
   one='up /etc/openvpn/update-resolv-conf'
   two='#up /etc/openvpn/update-resolv-conf'
   sed -i "s^$one^$two^g" openvpn.conf
fi

if ! grep "\#down /etc/openvpn/update-resolv-conf" openvpn.conf ; then
   one='down /etc/openvpn/update-resolv-conf'
   two='#down /etc/openvpn/update-resolv-conf'
   sed -i "s^$one^$two^g" openvpn.conf
fi

if ! grep "dev tun0" openvpn.conf ; then
   one='dev tun'
   two='dev tun0'
   sed -i "s#$one#$two#g" openvpn.conf
fi

if ! grep "\#tun-ipv6" openvpn.conf ; then
   one='tun-ipv6'
   two='#tun-ipv6'
   sed -i "s^$one^$two^g" openvpn.conf
fi

if ! grep "user tunnel" openvpn.conf ; then
   echo "user tunnel" >> openvpn.conf
fi

if ! grep "iproute /usr/bin/ip_unpriv" openvpn.conf ; then
   echo "iproute /usr/bin/ip_unpriv" >> openvpn.conf
fi

if ! grep "keepalive 5 15" "$file_name" ; then
   echo "keepalive 5 15" >> "$file_name"
fi

echo "
tunnel ALL=(ALL) NOPASSWD: /bin/ip
tunnel ALL=(ALL) NOPASSWD: /usr/sbin/openvpn *
Defaults:tunnel !requiretty
Defaults:tunnel env_keep += script_type
Defaults:tunnel env_keep += dev
" > /etc/sudoers.d/vpn_unpriv

cat /etc/sudoers.d/vpn_unpriv

mkdir -p /etc/uwt.d

## not required on Whonix-Gateway
## would break Whonix-Gateway
## The VPN will be connected first. Tor runs on top of it.
## Whonix-Gateway has no system DNS.
## Therefore, apt-get etc. still need to talk to a Tor SocksPort.
#echo "
#uwtwrapper_global=0
#" > /etc/uwt.d/50_vpn.conf

## not required on Whonix-Gateway
#mkdir -p /etc/torbrowser.d

#echo '
#TB_NO_TOR_CON_CHECK=1
#CURL_PROXY="--fail"
#' > /etc/torbrowser.d/50_vpn.conf

## not required on Whonix-Gateway
#apt-get --yes install unzip

## not required on Whonix-Gateway
#apt-get --yes install aptitude

## not required on Whonix-Gateway
#apt-get --yes install resolvconf

## not required on Whonix-Gateway
#aptitude keep-all

echo "
d       /run/openvpn                      0755    tunnel    tunnel    -       -
d       /run/resolvconf                   0775    root      tunnel    -       -
d       /run/resolvconf/interface         0775    root      tunnel    -       -
" > /usr/lib/tmpfiles.d/50_openvpn_unpriv.conf

## not required for Whonix-Gateway, just for cosistency with partner script.
mkdir -p /run/resolvconf
chown --recursive root:tunnel /run/resolvconf
chmod --recursive 775 /run/resolvconf

chown -R tunnel:tunnel /etc/openvpn

chown -R tunnel:tunnel /var/run/openvpn

chmod -R g-r /etc/openvpn
chmod -R o-r /etc/openvpn
chmod -R g-w /etc/openvpn
chmod -R o-w /etc/openvpn

cp /lib/systemd/system/openvpn@.service /lib/systemd/system/openvpn@openvpn.service

systemctl enable openvpn@openvpn

systemctl restart openvpn@openvpn

systemctl status openvpn@openvpn

## Not required on Whonix-Gateway.

#systemctl restart resolvconf

#systemctl status resolvconf

echo '
whonixcheck_skip_functions+=" check_tor_bootstrap "
whonixcheck_skip_functions+=" check_tor_socks_port_reachability "
whonixcheck_skip_functions+=" check_tor_socks_port "
#whonixcheck_skip_functions+=" check_tor_trans_port "
whonixcheck_skip_functions+=" check_stream_isolation "
whonixcheck_skip_functions+=" download_whonix_news "

## {{ Alternative to disabling check_tor_trans_port.

## Make the Tor TransPort test work by simulating the Tor SocksPort test succeeded.
CHECK_TOR_RESULT_SOCKS_PORT=0

## Do not warn if Tor was not detected. (Will be the VPN.)
WHONIXCHECK_NO_EXIT_ON_TRANS_PORT_DETECTION_FAILURE=1

## }}

## {{ Alternative to download_whonix_news.

## Download news through system default.
#CURL_PROXY_WHONIX_NEWS="--fail"

## }}
' > /etc/whonix.d/50_vpn.conf

mkdir -p /etc/whonix_firewall.d

echo "
VPN_FIREWALL=1
" > /etc/whonix_firewall.d/50_vpn.conf

cat /etc/whonix_firewall.d/50_vpn.conf

whonix_firewall

true "INFO: Success!"
